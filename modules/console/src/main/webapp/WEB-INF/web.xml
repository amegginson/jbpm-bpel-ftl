<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" >

    <!-- Enable the JSF servlet.  See faces-config.xml for Faces-specific configuration -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Mapping for all plain pages. -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>

    <!-- This mapping is for the process images. -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/sa/pi/*</url-pattern>
    </servlet-mapping>

    <!-- Use Documents Saved as *.xhtml -->
    <context-param>
        <param-name>javax.faces.DEFAULT_SUFFIX</param-name>
        <param-value>.xhtml</param-value>
    </context-param>

    <!-- Facelets debug output -->
    <context-param>
        <param-name>facelets.DEVELOPMENT</param-name>
        <param-value>false</param-value>
    </context-param>

    <!-- A simple JSP to redirect to the basic search page. -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- This is the GDP's deployer servlet -->
    <servlet>
        <servlet-name>GDP Deployer Servlet</servlet-name>
        <servlet-class>org.jbpm.web.ProcessUploadServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>GDP Deployer Servlet</servlet-name>
        <url-pattern>/upload/*</url-pattern>
    </servlet-mapping>

    <!--
       This role list should be changed to include all the relevant roles for your
       environment.
    -->
    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <security-role>
        <role-name>user</role-name>
    </security-role>

    <!--
       Security constraints - uncomment and optionally customize the role name to require
       a login before access is allowed to the application.

       Also, be sure to edit jboss-web.xml to configure the security domain if you are
       deploying inside JBossAS.
    -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Secure Area</web-resource-name>
            <url-pattern>/sa/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>user</role-name>
        </auth-constraint>
    </security-constraint>
    <!-- end security constraints -->

    <!-- Example Login page - lists user names -->
    <login-config>
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/ua/login-example.jsf</form-login-page>
            <form-error-page>/ua/login-example.jsf?error=true</form-error-page>
        </form-login-config>
    </login-config>
    <!-- End Example Login page - lists user names -->

    <!-- Login configuration option #1 - use the login page ==>
    <login-config>
        <auth-method>FORM</auth-method>
        <form-login-config>
            <form-login-page>/ua/login.jsf</form-login-page>
            <form-error-page>/ua/login.jsf?error=true</form-error-page>
        </form-login-config>
    </login-config>
    <!== End Login configuration option #1 -->

    <!-- Login configuration option #2 - use basic auth ==>
    <login-config>
        <auth-method>BASIC</auth-method>
        <realm-name>jBPM Administration Console</realm-name>
    </login-config>
    <!== End Login configuration option #2 -->

    <!-- Job executor launcher (begin) -->
    <listener>
        <description>
            Starts the job executor on servlet context initialization and stops it on 
            servlet context destruction.
        </description>
        <listener-class>org.jbpm.web.JobExecutorLauncher</listener-class>
    </listener>
    <!-- Job executor launcher (end) -->

    <!-- Job executor servlet (begin) ===
    <servlet>
        <description>
            This servlet has the purpose of executing pending jobs. Deprecated,
            replaced by JobExecutorLauncher.
        </description>
        <servlet-name>JobExecutorServlet</servlet-name>
        <servlet-class>org.jbpm.job.executor.JobExecutorServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>JobExecutorServlet</servlet-name>
        <url-pattern>/jobs</url-pattern>
    </servlet-mapping>
    ==== Job executor servlet (end) -->

    <resource-ref>
        <description>
            Logical name of the data source that provides connections to the persistence service.
            Must match the hibernate.connection.datasource property in the Hibernate 
            configuration file.
        </description>
        <res-ref-name>jdbc/JbpmDataSource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <!-- This section is so that the web console can deploy in the jbpm-enterprise.ear module -->
    <!-- EJB local references (begin) ===
    <resource-ref>
        <description>
            Logical name of the factory that provides JMS connections to the message service.
            Required for processes that contain asynchronous continuations.
        </description>
        <res-ref-name>jms/JbpmConnectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <ejb-local-ref>
        <description>
            Link to the local entity bean that implements the scheduler service. Required for
            processes that contain timers.
        </description>
        <ejb-ref-name>ejb/LocalTimerEntityBean</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>org.jbpm.ejb.LocalTimerEntityHome</local-home>
        <local>org.jbpm.ejb.LocalTimerEntity</local>
        <ejb-link>TimerEntityBean</ejb-link>
    </ejb-local-ref>

    <message-destination-ref>
        <description>
            The message service sends job messages to the queue referenced here. To ensure 
            this is the same queue from which the JobListenerBean receives messages, the 
            message-destination-link element points to a common logical destination, JobQueue.
        </description>
        <message-destination-ref-name>jms/JobQueue</message-destination-ref-name>
        <message-destination-type>javax.jms.Queue</message-destination-type>
        <message-destination-usage>Produces</message-destination-usage>
        <message-destination-link>JobQueue</message-destination-link>
    </message-destination-ref>
    ==== EJB local references (end) -->

</web-app>
