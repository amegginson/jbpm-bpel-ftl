<project name="jbpm.build" basedir=".." default="build.jpdl">

  <property file="${user.home}/jbpm/build.properties" />
  <property file="build/profiles/${profile}.profile.properties" />
  <property file="build/build.properties" />
  
  <target name="clean" description="cleans all subprojects">
    <!-- TODO these subtargets might executed conditionally, only if they exist.  but that would require an available property and a separate target -->
    <ant antfile="modules/jpdl/core/build.xml" target="clean" inheritall="false" />
    <ant antfile="jpdl/examples/build.xml" target="clean" inheritall="false" />
    <ant antfile="modules/jpdl/db/build.xml" target="clean" inheritall="false" />
    <ant antfile="jpdl/userguide/build.xml" target="clean" inheritall="false" />
    <ant antfile="modules/identity/build.xml" target="clean" inheritall="false" />
    <ant antfile="jboss/configuration/build.xml" target="clean" inheritall="false" />
    <ant antfile="jpdl/dist/build.xml" target="clean" inheritall="false" />
    <ant antfile="console/build.xml" target="clean" inheritall="false" />
    <ant antfile="jbpm4jsf/build.xml" target="clean" inheritall="false" />
    <ant antfile="enterprise/build.xml" target="clean" inheritall="false" />
    <ant antfile="designer/jpdl/org.jbpm.gd.jpdl.build/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/library/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/tools/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/container/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/console/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/enterprise/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/service/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/userguide/build.xml" target="clean" inheritall="false" />
    <ant antfile="bpel/examples/build.xml" target="clean" inheritall="false" />
    <!--ant antfile="bamconsole/build.xml" target="clean" inheritall="false" /-->
  </target>
  
  <target name="cruise" depends="test.jpdl" description="the nightly integration test build"/>

  <target name="build.jpdl" description="builds jpdl and all its dependent jbpm subprojects">   
    <!-- TODO these subtargets might executed conditionally, only if they exist.  but that would require an available property and a separate target -->
    <ant antfile="jpdl/dist/build.xml" target="package" inheritall="false" />
    <ant antfile="enterprise/build.xml" inheritall="false" />
    <!--
    <ant antfile="designer/jpdl/org.jbpm.gd.jpdl.build/build.xml" inheritall="false" />
    -->
  </target>

  <target name="build.bpel" description="builds bpel and all its dependent jbpm subprojects">
    <ant antfile="bpel/dist/build.xml" target="package" inheritall="false" />
  </target>

  <target name="test.jpdl" description="builds and then tests all testable subprojects">
    <ant antfile="modules/jpdl/core/build.xml" target="test" inheritall="false" />
  </target>

  <target name="get.dependencies" depends="get.docbook.support, get.libs.dependencies, get.jboss.dependencies, get.eclipse.dependencies"
          description="gets all the dependencies.  after this target, you should be able to build without a network connection."/>

  <target name="get.docbook.support">
    <available file="${docbook.support.dir}/docbook-support" property="docbook.support.available" />
    <antcall target="get.docbook.support.if.necessary" />
  </target>

  <target name="get.docbook.support.if.necessary" unless="docbook.support.available">
    <mkdir dir="${docbook.support.dir}" />
    <cvs command="export -r HEAD docbook-support" 
         dest="${docbook.support.dir}"
         cvsroot=":pserver:anonymous:@anoncvs.forge.jboss.com:/cvsroot/jboss" />
  </target>

  <target name="get.libs.dependencies">
    
    <!-- EXTERNAL DEPENDENCIES (4/4): UPDATE LOCAL REPOSITORY -->
    
    <property name="remote.license.dir" value="${remote.repository}/licenses" />
    
    <!-- lgpl license is used to build the jpdl distribution package -->
    <mkdir dir="${local.repository}/licenses" />
    <get src="${remote.license.dir}/lgpl.txt" dest="${local.repository}/licenses/lgpl.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.activation.dir}" />
    <get src="${lib.activation.remote}" dest="${lib.activation.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.activation.license}.txt" dest="${lib.activation.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.ajax4jsf.dir}" />
    <get src="${lib.ajax4jsf.remote}" dest="${lib.ajax4jsf.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.ajax4jsf.license}.txt" dest="${lib.ajax4jsf.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.ant.dir}" />
    <get src="${lib.ant.remote}" dest="${lib.ant.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.ant.license}.txt" dest="${lib.ant.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.ant.contrib.dir}" />
    <get src="${lib.ant.contrib.remote}" dest="${lib.ant.contrib.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.ant.contrib.license}.txt" dest="${lib.ant.contrib.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.antlr.dir}" />
    <get src="${lib.antlr.remote}" dest="${lib.antlr.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.antlr.license}.txt" dest="${lib.antlr.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.asm.dir}" />
    <get src="${lib.asm.remote}" dest="${lib.asm.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.asm.license}.txt" dest="${lib.asm.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.asm.attr.remote}" dest="${lib.asm.attr.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.asm.license}.txt" dest="${lib.asm.attr.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.aspectjrt.dir}" />
    <get src="${lib.aspectjrt.remote}" dest="${lib.aspectjrt.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.aspectjrt.license}.txt" dest="${lib.aspectjrt.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.bsh.dir}" />
    <get src="${lib.bsh.remote}" dest="${lib.bsh.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.bsh.license}.txt" dest="${lib.bsh.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.cactus.dir}" />
    <get src="${lib.cactus.remote}" dest="${lib.cactus.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.cactus.license}.txt" dest="${lib.cactus.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.cglib.dir}" />
    <get src="${lib.cglib.remote}" dest="${lib.cglib.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.cglib.license}.txt" dest="${lib.cglib.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.beanutils.dir}" />
    <get src="${lib.commons.beanutils.remote}" dest="${lib.commons.beanutils.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.beanutils.license}.txt" dest="${lib.commons.beanutils.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.codec.dir}" />
    <get src="${lib.commons.codec.remote}" dest="${lib.commons.codec.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.codec.license}.txt" dest="${lib.commons.codec.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.collections.dir}" />
    <get src="${lib.commons.collections.remote}" dest="${lib.commons.collections.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.collections.license}.txt" dest="${lib.commons.collections.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.digester.dir}" />
    <get src="${lib.commons.digester.remote}" dest="${lib.commons.digester.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.digester.license}.txt" dest="${lib.commons.digester.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.fileupload.dir}" />
    <get src="${lib.commons.fileupload.remote}" dest="${lib.commons.fileupload.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.fileupload.license}.txt" dest="${lib.commons.fileupload.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.httpclient.dir}" />
    <get src="${lib.commons.httpclient.remote}" dest="${lib.commons.httpclient.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.httpclient.license}.txt" dest="${lib.commons.httpclient.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.commons.lang.dir}" />
    <get src="${lib.commons.lang.remote}" dest="${lib.commons.lang.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.lang.license}.txt" dest="${lib.commons.lang.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    
    <mkdir dir="${local.repository}/${lib.commons.logging.dir}" />
    <get src="${lib.commons.logging.remote}" dest="${lib.commons.logging.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.commons.logging.license}.txt" dest="${lib.commons.logging.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.dom4j.dir}" />
    <get src="${lib.dom4j.remote}" dest="${lib.dom4j.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.dom4j.license}.txt" dest="${lib.dom4j.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.dumbster.dir}" />
    <get src="${lib.dumbster.remote}" dest="${lib.dumbster.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.dumbster.license}.txt" dest="${lib.dumbster.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.el.dir}" />
    <get src="${lib.el.api.remote}" dest="${lib.el.api.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.el.license}.txt" dest="${lib.el.api.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.el.impl.remote}" dest="${lib.el.impl.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.el.license}.txt" dest="${lib.el.impl.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.facelets.dir}" />
    <get src="${lib.facelets.remote}" dest="${lib.facelets.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.facelets.license}.txt" dest="${lib.facelets.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.gravel.dir}" />
    <get src="${lib.gravel.remote}" dest="${lib.gravel.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.gravel.license}.txt" dest="${lib.gravel.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.gravel.tools.remote}" dest="${lib.gravel.tools.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.gravel.license}.txt" dest="${lib.gravel.tools.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.hibernate.dir}" />
    <get src="${lib.hibernate.remote}" dest="${lib.hibernate.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.hibernate.license}.txt" dest="${lib.hibernate.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.hsqldb.dir}" />
    <get src="${lib.hsqldb.remote}" dest="${lib.hsqldb.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.hsqldb.license}.txt" dest="${lib.hsqldb.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.httpunit.dir}" />
    <get src="${lib.httpunit.remote}" dest="${lib.httpunit.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.httpunit.license}.txt" dest="${lib.httpunit.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jackrabbit.dir}" />
    <get src="${lib.jackrabbit.remote}" dest="${lib.jackrabbit.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jackrabbit.license}.txt" dest="${lib.jackrabbit.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jakarta.io.dir}" />
    <get src="${lib.jakarta.io.remote}" dest="${lib.jakarta.io.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jakarta.io.license}.txt" dest="${lib.jakarta.io.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.javamail.dir}" />
    <get src="${lib.javamail.remote}" dest="${lib.javamail.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.javamail.license}.txt" dest="${lib.javamail.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jaxen.dir}" />
    <get src="${lib.jaxen.remote}" dest="${lib.jaxen.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jaxen.license}.txt" dest="${lib.jaxen.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jaxrpc.dir}" />
    <get src="${lib.jaxrpc.api.remote}" dest="${lib.jaxrpc.api.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jaxrpc.license}.txt" dest="${lib.jaxrpc.api.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    
    <mkdir dir="${local.repository}/${lib.javassist.dir}" />
    <get src="${lib.javassist.remote}" dest="${lib.javassist.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.javassist.license}.txt" dest="${lib.javassist.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jboss.dir}" />
    <get src="${lib.jboss.common.remote}" dest="${lib.jboss.common.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.license}.txt" dest="${lib.jboss.common.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.jboss.jmx.remote}" dest="${lib.jboss.jmx.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.license}.txt" dest="${lib.jboss.jmx.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.jboss.j2ee.remote}" dest="${lib.jboss.j2ee.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.license}.txt" dest="${lib.jboss.j2ee.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.jboss.system.remote}" dest="${lib.jboss.system.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.license}.txt" dest="${lib.jboss.system.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jboss.as.dir}" />
    <get src="${lib.jboss.as.remote}" dest="${lib.jboss.as.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.as.license}.txt" dest="${lib.jboss.as.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    
    <mkdir dir="${local.repository}/${lib.jboss.saaj.dir}" />
    <get src="${lib.jboss.saaj.remote}" dest="${lib.jboss.saaj.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.saaj.license}.txt" dest="${lib.jboss.saaj.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    
    <mkdir dir="${local.repository}/${lib.jboss.backport-concurrent.dir}" />
    <get src="${lib.jboss.backport-concurrent.remote}" dest="${lib.jboss.backport-concurrent.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.backport-concurrent.license}.txt" dest="${lib.jboss.backport-concurrent.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jbossretro.dir}" />
    <get src="${lib.jbossretro.remote}" dest="${lib.jbossretro.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jbossretro.license}.txt" dest="${lib.jbossretro.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jbossretro-rt.dir}" />
    <get src="${lib.jbossretro-rt.remote}" dest="${lib.jbossretro-rt.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jbossretro-rt.license}.txt" dest="${lib.jbossretro-rt.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jboss.ws4ee.dir}" />
    <get src="${lib.jboss.ws4ee.remote}" dest="${lib.jboss.ws4ee.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.ws4ee.license}.txt" dest="${lib.jboss.ws4ee.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.jboss.axis.remote}" dest="${lib.jboss.axis.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.ws4ee.license}.txt" dest="${lib.jboss.axis.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jbossws.dir}" />
    <get src="${lib.jbossws.remote}" dest="${lib.jbossws.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jbossws.license}.txt" dest="${lib.jbossws.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jcr.dir}" />
    <get src="${lib.jcr.remote}" dest="${lib.jcr.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jcr.license}.txt" dest="${lib.jcr.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.junit.dir}" />
    <get src="${lib.junit.remote}" dest="${lib.junit.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.junit.license}.txt" dest="${lib.junit.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jwebunit.dir}" />
    <get src="${lib.jwebunit.remote}" dest="${lib.jwebunit.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jwebunit.license}.txt" dest="${lib.jwebunit.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jsf.dir}" />
    <get src="${lib.jsf.api.remote}" dest="${lib.jsf.api.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jsf.license}.txt" dest="${lib.jsf.api.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
    <get src="${lib.jsf.impl.remote}" dest="${lib.jsf.impl.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jsf.license}.txt" dest="${lib.jsf.impl.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.log4j.dir}" />
    <get src="${lib.log4j.remote}" dest="${lib.log4j.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.log4j.license}.txt" dest="${lib.log4j.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.mockrunner.dir}" />
    <get src="${lib.mockrunner.remote}" dest="${lib.mockrunner.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.mockrunner.license}.txt" dest="${lib.mockrunner.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.mockejb.dir}" />
    <get src="${lib.mockejb.remote}" dest="${lib.mockejb.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.mockejb.license}.txt" dest="${lib.mockejb.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.nekohtml.dir}" />
    <get src="${lib.nekohtml.remote}" dest="${lib.nekohtml.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.nekohtml.license}.txt" dest="${lib.nekohtml.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.oscache.dir}" />
    <get src="${lib.oscache.remote}" dest="${lib.oscache.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.oscache.license}.txt" dest="${lib.oscache.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.servlet.dir}" />
    <get src="${lib.servlet.remote}" dest="${lib.servlet.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.servlet.license}.txt" dest="${lib.servlet.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.servlet-jsp.dir}" />
    <get src="${lib.servlet-jsp.remote}" dest="${lib.servlet-jsp.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.servlet-jsp.license}.txt" dest="${lib.servlet-jsp.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.stax-api.dir}" />
    <get src="${lib.stax-api.remote}" dest="${lib.stax-api.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.stax-api.license}.txt" dest="${lib.stax-api.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.tlddoc.dir}" />
    <get src="${lib.tlddoc.remote}" dest="${lib.tlddoc.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.tlddoc.license}.txt" dest="${lib.tlddoc.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.woodstox.dir}" />
    <get src="${lib.woodstox.remote}" dest="${lib.woodstox.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.woodstox.license}.txt" dest="${lib.woodstox.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.wsdl4j.dir}" />
    <get src="${lib.wsdl4j.remote}" dest="${lib.wsdl4j.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.wsdl4j.license}.txt" dest="${lib.wsdl4j.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.xercesimpl.dir}" />
    <get src="${lib.xercesimpl.remote}" dest="${lib.xercesimpl.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.xercesimpl.license}.txt" dest="${lib.xercesimpl.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <get src="${lib.xml.apis.remote}" dest="${lib.xml.apis.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.xercesimpl.license}.txt" dest="${lib.xml.apis.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/jbpm/clover" />
    <get src="${remote.repository}/jbpm/clover/clover.jar" dest="${local.repository}/jbpm/clover/clover.jar" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.repository}/jbpm/clover/clover.license" dest="${local.repository}/jbpm/clover/clover.license" usetimestamp="true" ignoreerrors="true" />

    <!-- Desmo-J is used for discrete event simulation -->
    <mkdir dir="${local.repository}/${lib.desmoj.dir}" />
    <get src="${lib.desmoj.remote}" dest="${lib.desmoj.local}" usetimestamp="true" ignoreerrors="true" />

    <!-- JasperReports and internally JFreeChart are used for simulation reporting -->
    <mkdir dir="${local.repository}/${lib.jasperreports.dir}" />
    <get src="${lib.jasperreports.remote}" dest="${lib.jasperreports.local}" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jfreechart.dir}" />
    <get src="${lib.jfreechart.remote}" dest="${lib.jfreechart.local}" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.jcommon.dir}" />
    <get src="${lib.jcommon.remote}" dest="${lib.jcommon.local}" usetimestamp="true" ignoreerrors="true" />

  </target>
  
  <target name="get.eclipse.dependencies">
    <property name="remote.license.dir" value="${remote.repository}/licenses" />

    <mkdir dir="${local.repository}/${lib.eclipse.emf.dir}" />
    <get src="${lib.eclipse.emf.remote}" dest="${lib.eclipse.emf.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.eclipse.emf.license}.txt" dest="${lib.eclipse.emf.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.eclipse.gef.dir}" />
    <get src="${lib.eclipse.gef.remote}" dest="${lib.eclipse.gef.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.eclipse.gef.license}.txt" dest="${lib.eclipse.gef.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.eclipse.dtp.dir}" />
    <get src="${lib.eclipse.dtp.remote}" dest="${lib.eclipse.dtp.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.eclipse.dtp.license}.txt" dest="${lib.eclipse.dtp.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.eclipse.sdk.dir}" />
    <get src="${lib.eclipse.sdk.remote}" dest="${lib.eclipse.sdk.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.eclipse.sdk.license}.txt" dest="${lib.eclipse.sdk.local}.license.txt" usetimestamp="true" ignoreerrors="true" />

    <mkdir dir="${local.repository}/${lib.eclipse.wtp.dir}" />
    <get src="${lib.eclipse.wtp.remote}" dest="${lib.eclipse.wtp.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.eclipse.wtp.license}.txt" dest="${lib.eclipse.wtp.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
  </target>

  <target name="get.jboss.dependencies">
    <property name="remote.license.dir" value="${remote.repository}/licenses" />
    <mkdir dir="${local.repository}/${lib.jboss.as.dir}" />
    <get src="${lib.jboss.as.remote}" dest="${lib.jboss.as.local}" usetimestamp="true" ignoreerrors="true" />
    <get src="${remote.license.dir}/${lib.jboss.license}.txt" dest="${lib.jboss.as.local}.license.txt" usetimestamp="true" ignoreerrors="true" />
  </target>

  <!-- DON'T CHANGE THE NAME OF THIS TARGET AS IT IS USED IN THE CRUISECONTROL BUILD SCRIPT -->
  <target name="install.jbpm.ant" description="copies junit and clover jars to the directory ${ant.home}/lib">
    <copy todir="${ant.home}/lib" file="${local.repository}/jbpm/clover/clover.jar" overwrite="true"/>
    <copy todir="${ant.home}/lib" file="${local.repository}/jbpm/clover/clover.license"  overwrite="true"/>
    <copy todir="${ant.home}/lib" file="${lib.junit.local}" overwrite="true"/>
  </target>

</project>
